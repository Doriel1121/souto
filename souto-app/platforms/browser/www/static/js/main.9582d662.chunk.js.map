{"version":3,"sources":["components/menu.js","components/pages/createWorkPage.js","components/calendar.js","components/alert.js","components/shiftForm.js","config.js","components/pages/createShiftPage.js","components/pages/loadingPage.js","components/pages/homePage.js","userAppDataProvider.js","App.js","serviceWorker.js","index.js","resources/logo.png"],"names":["styles","toolbar","textAlign","title","margin","menu","width","menuItemText","menuItemIcon","justifyContent","Menu","props","toggleDrawer","setState","isMenuOpen","state","getMenu","list","style","role","List","to","ListItem","button","key","ListItemText","primary","ListItemIcon","disabled","Divider","Drawer","open","onClose","this","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Component","CreateWorkPage","getLocalIsoDateString","date","Date","getTimezoneOffset","toISOString","handleDateChange","handleTimeChange","time","handleDurationChange","duration","sendWork","callback","data","name","split","axios","post","then","catch","error","console","log","event","target","value","SaveButton","withRouter","history","Button","variant","Grid","container","direction","justify","alignItems","spacing","item","xs","TextField","id","label","onChange","handleNameChange","bind","utils","DateFnsUtils","DatePicker","inputVariant","format","KeyboardButtonProps","TimePicker","ampm","minutesStep","openTo","views","Calendar","renderDaily","plugins","timeGridPlugin","slotLabelFormat","hour","minute","hour12","meridiem","businessHours","startTime","endTime","slotMinTime","slotDuration","initialView","locales","heLocale","locale","height","allDaySlot","headerToolbar","events","renderMonthly","dayGridPlugin","interactionPlugin","selectable","initialDate","month","dateClick","info","onDateChange","dateStr","dayCellClassNames","showNonCurrentDates","Alert","elevation","selectCtrl","monthlyView","ShiftForm","sendShift","hours","undefined","therapistId","currentDate","start","end","alertOpen","alertFillOpen","onDataReady","shiftType","renderHoursByShiftType","shiftsHours","map","MenuItem","text","FormControl","Select","labelId","Snackbar","autoHideDuration","severity","config","morning","noon","evening","CreateShiftPage","componentWillMount","dateSplitted","get","userId","response","parseShiftToEvent","existingShifts","calendarKey","Math","random","alert","changeCurrentDate","newDate","resetData","handleShiftTypeChange","shift","Start","Fragment","Typography","page","paddingTop","logo","LoadingPage","componentDidMount","setTimeout","timeout","responseMonth","dataReady","changeContext","className","src","Logo","alt","pageView","marginTop","mainButton","HomePage","UserContext","React","createContext","UserAppDataProvider","updateState","obj","logedin","user","Provider","children","mainTheme","createMuiTheme","palette","main","typography","allVariants","app","overflow","jss","create","jssPreset","rtl","App","ThemeProvider","theme","exact","path","Consumer","context","Id","Boolean","window","location","hostname","match","document","addEventListener","facebookConnectPlugin","login","userData","JSON","stringify","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.9582d662.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { AppBar, Toolbar, IconButton } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nconst styles = {\r\n  toolbar: {\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    margin: \"10px\",\r\n  },\r\n  menu: {\r\n    width: \"50vw\",\r\n  },\r\n  menuItemText: {\r\n    textAlign: \"right\",\r\n  },\r\n  menuItemIcon: {\r\n    justifyContent: \"flex-end\",\r\n  },\r\n};\r\n\r\nexport default class Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMenuOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({ isMenuOpen: !this.state.isMenuOpen });\r\n  };\r\n\r\n  getMenu = () => {\r\n    let list = (\r\n      <div style={styles.menu} role=\"presentation\">\r\n        <List>\r\n          <Link to={\"/client/home\"}>\r\n            <ListItem button key={\"home\"}>\r\n              <ListItemText style={styles.menuItemText} primary={\"עמוד הבית\"} />\r\n              <ListItemIcon style={styles.menuItemIcon}>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          </Link>\r\n          <ListItem button key={\"about\"} disabled>\r\n            <ListItemText style={styles.menuItemText} primary={\"אודות\"} />\r\n            <ListItemIcon style={styles.menuItemIcon}>\r\n              <InfoIcon />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n          <Link to={\"/client/newshift\"}>\r\n            <ListItem button key={\"shifts\"}>\r\n              <ListItemText style={styles.menuItemText} primary={\"משמרות\"} />\r\n              <ListItemIcon style={styles.menuItemIcon}>\r\n                <AddCircleIcon />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key={\"contact\"} disabled>\r\n            <ListItemText style={styles.menuItemText} primary={\"צור קשר\"} />\r\n            <ListItemIcon style={styles.menuItemIcon}>\r\n              <PhoneIcon />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n          <ListItem button key={\"settings\"} disabled>\r\n            <ListItemText style={styles.menuItemText} primary={\"הגדרות\"} />\r\n            <ListItemIcon style={styles.menuItemIcon}>\r\n              <SettingsIcon />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    );\r\n    return (\r\n      <Drawer open={this.state.isMenuOpen} onClose={this.toggleDrawer}>\r\n        {list}\r\n      </Drawer>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let menu = this.getMenu();\r\n    return (\r\n      <AppBar position=\"static\">\r\n        {menu}\r\n        <Toolbar style={styles.toolbar}>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon onClick={this.toggleDrawer} />\r\n          </IconButton>\r\n          <div style={styles.title}>{this.props.title}</div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { withRouter } from 'react-router-dom'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  DatePicker,\r\n  TimePicker,\r\n} from '@material-ui/pickers'\r\nimport Menu from '../menu'\r\nimport axios from 'axios'\r\n\r\nexport default class CreateWorkPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      name: '',\r\n      date: new Date(),\r\n      time: new Date('0000-01-01T12:00:00'),\r\n      duration: new Date('0000-01-01T00:30:00'),\r\n    }\r\n  }\r\n\r\n  getLocalIsoDateString = (date) => {\r\n    return new Date(date - date.getTimezoneOffset() * 60000).toISOString()\r\n  }\r\n\r\n  handleDateChange = (date) => {\r\n    this.setState({ date: date })\r\n  }\r\n  handleTimeChange = (time) => {\r\n    this.setState({ time: time })\r\n  }\r\n  handleDurationChange = (duration) => {\r\n    this.setState({ duration: duration })\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    this.setState({ name: event.target.value })\r\n  }\r\n\r\n  sendWork = (callback) => {\r\n    let data = {\r\n      name: this.state.name,\r\n      date: this.getLocalIsoDateString(this.state.date).split('T')[0],\r\n      time: this.getLocalIsoDateString(this.state.time).split('T')[1],\r\n      duration: this.getLocalIsoDateString(this.state.duration).split('T')[1],\r\n    }\r\n    axios\r\n      .post('http://3.125.157.104:3001/newwork', data)\r\n      .then(() => {\r\n        callback()\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const SaveButton = withRouter(({ history }) => (\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        Save\r\n      </Button>\r\n    ))\r\n    return (\r\n      <div>\r\n        <Menu />\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <h2>Create new work</h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange.bind(this)}\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={12}>\r\n              <DatePicker\r\n                margin=\"normal\"\r\n                inputVariant=\"outlined\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Date\"\r\n                format=\"MM/dd/yyyy\"\r\n                value={this.state.date}\r\n                onChange={this.handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TimePicker\r\n                ampm={false}\r\n                margin=\"normal\"\r\n                inputVariant=\"outlined\"\r\n                id=\"time-picker\"\r\n                label=\"Time\"\r\n                minutesStep={5}\r\n                value={this.state.time}\r\n                onChange={this.handleTimeChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TimePicker\r\n                ampm={false}\r\n                openTo=\"minutes\"\r\n                inputVariant=\"outlined\"\r\n                views={['hours', 'minutes']}\r\n                format=\"HH:mm\"\r\n                label=\"Duration\"\r\n                minutesStep={5}\r\n                value={this.state.duration}\r\n                onChange={this.handleDurationChange}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <Grid item xs={12}>\r\n            {SaveButton}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport heLocale from '@fullcalendar/core/locales/he'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport '../index.css'\r\n\r\nexport default class Calendar extends Component {\r\n  renderDaily = () => {\r\n    return (\r\n      <FullCalendar\r\n        plugins={[timeGridPlugin]}\r\n        slotLabelFormat={{\r\n          hour: 'numeric',\r\n          minute: '2-digit',\r\n          hour12: false,\r\n          meridiem: 'short',\r\n        }}\r\n        businessHours={{\r\n          startTime: '09:00',\r\n          endTime: '22:00',\r\n        }}\r\n        slotMinTime=\"08:30\"\r\n        slotDuration=\"00:15:00\"\r\n        initialView=\"timeGridDay\"\r\n        locales={[heLocale]}\r\n        locale={'he'}\r\n        height={600}\r\n        allDaySlot={false}\r\n        headerToolbar={false}\r\n        events={this.props.events}\r\n      />\r\n    )\r\n  }\r\n\r\n  renderMonthly = () => {\r\n    return (\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        selectable\r\n        locales={[heLocale]}\r\n        locale={'he'}\r\n        initialDate={this.props.month}\r\n        dateClick={(info) => {\r\n          this.props.onDateChange(info.dateStr)\r\n        }}\r\n        dayCellClassNames={['dateA']}\r\n        headerToolbar={false}\r\n        initialView={'dayGridMonth'}\r\n        showNonCurrentDates={false}\r\n        events={this.props.events}\r\n      />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let variant = this.props.variant\r\n    if (variant === 'day') return this.renderDaily()\r\n    else if (variant === 'month') return this.renderMonthly()\r\n  }\r\n}\r\n","import React from 'react'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nexport default function Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Button,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"./alert\";\r\n\r\nconst styles = {\r\n  selectCtrl: {\r\n    width: \"60vw\",\r\n  },\r\n  monthlyView: { width: \"95vw\" },\r\n};\r\n\r\nconst defaultShiftType = \"morning\";\r\n\r\nexport default class ShiftForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shiftType: defaultShiftType,\r\n      hours: \"none\",\r\n    };\r\n  }\r\n\r\n  sendShift = () => {\r\n    if (this.state.hours === \"none\" || this.state.hours === undefined) {\r\n      this.setState({ alertFillOpen: true });\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      therapistId: 1,\r\n      date: this.props.currentDate,\r\n      start: this.state.hours.start,\r\n      end: this.state.hours.end,\r\n      alertOpen: false,\r\n      alertFillOpen: false,\r\n    };\r\n    this.props.onDataReady(data, () => {\r\n      this.setState({\r\n        hours: \"\",\r\n        shiftType: defaultShiftType,\r\n        alertOpen: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  renderHoursByShiftType = (shiftType) => {\r\n    return this.props.shiftsHours[shiftType].map((item) => {\r\n      return (\r\n        <MenuItem key={item.text} value={item.value}>\r\n          {item.text}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n      >\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" style={styles.selectCtrl}>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.shiftType}\r\n              onChange={(event) => {\r\n                this.setState({ shiftType: event.target.value });\r\n              }}\r\n            >\r\n              <MenuItem value={\"morning\"}>בוקר</MenuItem>\r\n              <MenuItem value={\"noon\"}>צהריים</MenuItem>\r\n              <MenuItem value={\"evening\"}>ערב</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControl variant=\"outlined\" style={styles.selectCtrl}>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={this.state.hours}\r\n              onChange={(event) => {\r\n                this.setState({ hours: event.target.value });\r\n              }}\r\n            >\r\n              <MenuItem value={\"none\"}>בחר שעות</MenuItem>\r\n              {this.renderHoursByShiftType(this.state.shiftType)}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={this.sendShift}>\r\n            עדכן\r\n          </Button>\r\n        </Grid>\r\n        <Snackbar\r\n          open={this.state.alertOpen}\r\n          autoHideDuration={5000}\r\n          onClose={() => {\r\n            this.setState({ alertOpen: false });\r\n          }}\r\n        >\r\n          <Alert\r\n            severity=\"success\"\r\n            onClose={() => {\r\n              this.setState({ alertOpen: false });\r\n            }}\r\n          >\r\n            הבקשה התקבלה בהצלחה\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          open={this.state.alertFillOpen}\r\n          autoHideDuration={5000}\r\n          onClose={() => {\r\n            this.setState({ alertOpen: false });\r\n          }}\r\n        >\r\n          <Alert\r\n            severity=\"warning\"\r\n            onClose={() => {\r\n              this.setState({ alertFillOpen: false });\r\n            }}\r\n          >\r\n            אנא מלא את כל הפרטים\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","export const config = {\r\n  server: \"https://18.192.53.137:3001\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Menu from \"../menu\";\r\nimport Calendar from \"../calendar\";\r\nimport ShiftForm from \"../shiftForm\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../../config\";\r\n\r\nconst styles = {\r\n  selectCtrl: {\r\n    width: \"60vw\",\r\n  },\r\n  monthlyView: { width: \"95vw\" },\r\n};\r\n\r\nconst shiftsHours = {\r\n  morning: [\r\n    { text: \"09:00 - 17:00\", value: { start: \"09:00:00\", end: \"17:00:00\" } },\r\n    { text: \"10:00 - 18:00\", value: { start: \"10:00:00\", end: \"18:00:00\" } },\r\n  ],\r\n  noon: [\r\n    { text: \"12:00 - 18:00\", value: { start: \"12:00:00\", end: \"18:00:00\" } },\r\n  ],\r\n  evening: [\r\n    { text: \"15:00 - 21:00\", value: { start: \"15:00:00\", end: \"21:00:00\" } },\r\n    { text: \"16:00 - 21:00\", value: { start: \"16:00:00\", end: \"21:00:00\" } },\r\n  ],\r\n};\r\n\r\nexport default class CreateShiftPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentDate: this.props.month,\r\n      month: \"1970-01-01\",\r\n      shiftType: \"morning\",\r\n      hours: \"\",\r\n      existingShifts: [],\r\n      calendarKey: 0,\r\n    };\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    let month = this.props.month;\r\n    var dateSplitted = month.split(\"-\");\r\n    axios\r\n      .get(\r\n        config.server +\r\n          `/monthshifts/${this.props.userId}/${dateSplitted[0]}/${dateSplitted[1]}`\r\n      )\r\n      .then((response) => {\r\n        let events = response.data.map((item) => {\r\n          return this.parseShiftToEvent(item);\r\n        });\r\n        this.setState({\r\n          existingShifts: events,\r\n          calendarKey: Math.random(),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"מצטערים! משהו נכשל\");\r\n        alert(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  changeCurrentDate = (newDate) => {\r\n    this.resetData(() => {\r\n      this.setState({ currentDate: newDate });\r\n    });\r\n  };\r\n\r\n  resetData = (callback) => {\r\n    this.setState({ shiftType: \"morning\", hours: \"\" }, callback);\r\n  };\r\n\r\n  handleShiftTypeChange = (event) => {\r\n    this.setState({ shiftType: event.target.value, hours: \"\" });\r\n  };\r\n\r\n  parseShiftToEvent = (shift) => {\r\n    let date = shift.date === undefined ? shift.Date.split(\"T\")[0] : shift.date;\r\n    let start = shift.start === undefined ? shift.Start : shift.start;\r\n    return {\r\n      title: \"S\",\r\n      start: date + \"T\" + start,\r\n      end: date + \"T\" + \"23:00:00\",\r\n    };\r\n  };\r\n\r\n  sendShift = (shift, callback) => {\r\n    axios\r\n      .post(config.server + \"/newshift\", shift)\r\n      .then(() => {\r\n        this.setState((state) => {\r\n          const events = [\r\n            ...state.existingShifts,\r\n            this.parseShiftToEvent(shift),\r\n          ];\r\n\r\n          return { existingShifts: events };\r\n        }, callback);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Menu title={\"נהל את המשמרות שלך\"} />\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <br />\r\n            <Typography variant={\"h4\"}>{this.state.currentDate}</Typography>\r\n          </Grid>\r\n          <ShiftForm\r\n            shiftsHours={shiftsHours}\r\n            onDataReady={this.sendShift}\r\n            currentDate={this.state.currentDate}\r\n          />\r\n          <Grid item xs={12} style={styles.monthlyView}>\r\n            <br />\r\n            <Calendar\r\n              key={this.state.calendarKey}\r\n              variant=\"month\"\r\n              month={this.props.month}\r\n              onDateChange={this.changeCurrentDate}\r\n              events={this.state.existingShifts}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Logo from \"../../resources/logo.png\";\r\nimport axios from \"axios\";\r\nimport { config } from \"../../config\";\r\n\r\nconst styles = {\r\n  page: {\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"30vh\",\r\n  },\r\n  logo: {\r\n    width: \"50vw\",\r\n  },\r\n};\r\n\r\nexport default class LoadingPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      timeout: false,\r\n      dataReady: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n      this.setState({ timeout: true });\r\n    }, 2500);\r\n    axios\r\n      .get(config.server + \"/login/0523768089\")\r\n      .then((response) => {\r\n        axios\r\n          .get(config.server + \"/getopenmonth\")\r\n          .then((responseMonth) => {\r\n            let month = responseMonth.data;\r\n            this.setState({ dataReady: true }, () => {\r\n              this.props.changeContext({\r\n                month,\r\n                month,\r\n                logedId: true,\r\n                user: response.data,\r\n              });\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      })\r\n      .catch(() => {\r\n        alert(\"אופס! נראה שאתה לא רשום כמטפל\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.timeout && this.state.dataReady)\r\n      return <Redirect to={\"/client/home\"} />;\r\n    return (\r\n      <div className={\"page\"} style={styles.page}>\r\n        <img src={Logo} alt={\"logo\"} style={styles.logo} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Logo from \"../../resources/logo.png\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"../menu\";\r\n\r\nconst styles = {\r\n  pageView: {\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n    paddingTop: \"10vh\",\r\n  },\r\n  logo: {\r\n    width: \"50vw\",\r\n  },\r\n  menu: {\r\n    marginTop: \"5vh\",\r\n  },\r\n  mainButton: {\r\n    width: \"40vw\",\r\n    height: \"40vw\",\r\n  },\r\n};\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Menu title=\"עמוד הבית\" />\r\n        <div style={styles.pageView}>\r\n          <img style={styles.logo} src={Logo} alt={\"logo\"} />\r\n          <br />\r\n          <Grid\r\n            container\r\n            style={styles.menu}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                style={styles.mainButton}\r\n                variant={\"contained\"}\r\n                color={\"primary\"}\r\n                disabled\r\n              >\r\n                סיכום חודשי\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/client/newshift\">\r\n                <Button\r\n                  style={styles.mainButton}\r\n                  variant={\"contained\"}\r\n                  color={\"primary\"}\r\n                >\r\n                  ניהול משמרות\r\n                </Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport class UserAppDataProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      month: \"1970-01-01\",\r\n      logedin: false,\r\n      user: {},\r\n    };\r\n  }\r\n\r\n  updateState = (obj) => {\r\n    this.setState(obj);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <UserContext.Provider\r\n        value={{ state: this.state, updateState: this.updateState }}\r\n      >\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserContext;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n  jssPreset,\r\n} from \"@material-ui/core/styles\";\r\nimport CreateWorkPage from \"./components/pages/createWorkPage\";\r\nimport CreateShiftPage from \"./components/pages/createShiftPage\";\r\nimport LoadingPage from \"./components/pages/loadingPage\";\r\nimport HomePage from \"./components/pages/homePage\";\r\nimport UserContext, { UserAppDataProvider } from \"./userAppDataProvider\";\r\nimport { create } from \"jss\";\r\nimport rtl from \"jss-rtl\";\r\n\r\nconst mainTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#464646\",\r\n    },\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      color: \"#4c4c4c\",\r\n    },\r\n  },\r\n  direction: \"rtl\",\r\n});\r\n\r\nconst styles = {\r\n  app: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    color: \"#4c4c4c\",\r\n  },\r\n};\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App page\" style={styles.app}>\r\n      <ThemeProvider theme={mainTheme} jss={jss}>\r\n        <Router>\r\n          <Switch>\r\n            <UserAppDataProvider>\r\n              <Route exact path=\"/newwork\">\r\n                <CreateWorkPage />\r\n              </Route>\r\n              <UserContext.Consumer>\r\n                {(context) => {\r\n                  return (\r\n                    <React.Fragment>\r\n                      <Route exact path=\"/\">\r\n                        <LoadingPage changeContext={context.updateState} />\r\n                      </Route>\r\n                      <Route exact path=\"/client/newshift\">\r\n                        <CreateShiftPage\r\n                          month={context.state.month}\r\n                          userId={context.state.user.Id}\r\n                        />\r\n                      </Route>\r\n                      <Route exact path=\"/client/home\">\r\n                        <HomePage />\r\n                      </Route>\r\n                    </React.Fragment>\r\n                  );\r\n                }}\r\n              </UserContext.Consumer>\r\n            </UserAppDataProvider>\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst startApp = () => {\r\n  var fbLoginSuccess = function (userData) {\r\n    alert(JSON.stringify(userData));\r\n  };\r\n\r\n  window.facebookConnectPlugin.login(\r\n    [\"public_profile\"],\r\n    fbLoginSuccess,\r\n    function loginError(error) {\r\n      alert(\"Err: \" + error);\r\n    }\r\n  );\r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\ndocument.addEventListener(\"deviceready\", startApp, false);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.c1c41907.png\";"],"sourceRoot":""}